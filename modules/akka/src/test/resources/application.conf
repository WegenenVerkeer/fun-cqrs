
akka {

  stdout-loglevel = off // defaults to WARNING can be disabled with off. The stdout-loglevel is only in effect during system startup and shutdown
  actor.warn-about-java-serializer-usage = false
  actor.allow-java-serialization = true
  log-dead-letters-during-shutdown = off
  loglevel = INFO
  log-dead-letters = off
  log-config-on-start = off // Log the complete configuration at INFO level when the actor system is started

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    serialize-messages = off // when on, the akka framework will determine whether or not messages can be serialized, else the plugin

    debug {
      receive = on // log all messages sent to an actor if that actors receive method is a LoggingReceive
      autoreceive = off // log all special messages like Kill, PoisoffPill etc sent to all actors
      lifecycle = off // log all actor lifecycle events of all actors
      fsm = off // enable logging of all events, transitioffs and timers of FSM Actors that extend LoggingFSM
      event-stream = off // enable logging of subscriptions (subscribe/unsubscribe) on the ActorSystem.eventStream
    }
  }

  persistence {
    journal.plugin = "inmemory-journal"
    snapshot-store.plugin = "inmemory-snapshot-store"
  }
}

inmemory-read-journal {

  # ask timeout on Futures
  ask-timeout = "13s"

  # New events are retrieved (polled) with this interval.
  refresh-interval = "100ms"

}

inmemory-journal {

  event-adapters {
    tagging = "io.funcqrs.akka.TaggingEventAdapter"
  }

  event-adapter-bindings {
    "io.funcqrs.akka.UserEvt" = tagging
  }
}


funcqrs {

  akka {

    aggregates {

      ask-timeout = 5s
      events-per-snapshot = 100

      passivation-strategy {
        class = "io.funcqrs.akka.MaxChildrenPassivationStrategy"
        max-children.max = 40
        max-children.kill-at-once = 20
      }

      aggregate-name {
        events-per-snapshot = 200
        ask-timeout = 15s

        passivation-strategy {
          class = "io.funcqrs.akka.MaxChildrenPassivationStrategy"
          max-children.max = 40
          max-children.kill-at-once = 20
        }

      }

      Person {
        async-command-timeout = 1s
      }
    }
  }
}